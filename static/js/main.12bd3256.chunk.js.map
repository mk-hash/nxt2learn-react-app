{"version":3,"sources":["components/Concepts.js","components/Home.js","components/SubTopics.js","components/Topics.js","components/Report.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["Concepts","data","CONCEPTS","useState","concepts","setConcepts","useEffect","a","length","getData","Grid","container","map","concept","item","xs","sm","md","lg","key","id","Box","bgcolor","style","padding","margin","textAlign","to","color","textDecoration","Typography","variant","title","Home","className","Button","size","href","orange","justify","alignItems","Card","CardContent","Avatar","fontSize","backgroundColor","lightBlue","SubTopics","props","updateTopics","topic_id","status","onStatusUpdate","topics","filter","tt","parent_id","topTopic","topic","Paper","marginBottom","Tooltip","IconButton","aria-label","onClick","Chip","label","toUpperCase","nextLink","React","forwardRef","ref","innerRef","Topics","useParams","setConcept","topTopics","setTopTopics","setTopics","topicNow","setTN","gotoTopic","pos","tconcept","c","sections","localTopics","JSON","parse","localStorage","getItem","undefined","CardHeader","action","component","removeItem","subheader","Stepper","alternativeLabel","activeStep","t","Step","StepLabel","topicsId","ttopics","Object","assign","setItem","stringify","disabled","Report","fontStyle","fontWeight","theme","createMuiTheme","palette","primary","secondary","App","ThemeProvider","AppBar","position","Toolbar","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12bd3256.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\n// Concepts Data File\nimport CONCEPTS from \"../data/concepts.json\";\n\nexport default function Concepts() {\n  const data = CONCEPTS;\n\n  const [concepts, setConcepts] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      setConcepts(data);\n    }\n    if (!concepts.length) {\n      getData();\n    }\n  }, [concepts, data]);\n\n  return (\n    <Grid container>\n      {concepts.map(concept => (\n        <Grid item xs={12} sm={6} md={4} lg={3} key={concept.id}>\n          <Box\n            bgcolor=\"secondary.main\"\n            style={{\n              padding: \"5%\",\n              margin: \"2%\",\n              textAlign: \"center\"\n            }}\n          >\n            <Link\n              to={\"/c/\" + concept.id}\n              style={{ color: \"white\", textDecoration: \"none\" }}\n            >\n              <Typography variant=\"h3\">{concept.title}</Typography>\n            </Link>\n          </Box>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Concepts from \"./Concepts\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nexport default function Home() {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Box bgcolor=\"primary.main\" className=\"box\">\n        <Typography variant=\"h2\" className=\"text-white\">\n          nxt2learn React App\n        </Typography>\n        <div className=\"mb-4\"></div>\n        <Typography variant=\"h4\" className=\"text-white\">\n          Welcome to nxt2learn React App!\n        </Typography>\n        <div className=\"mb-4\"></div>\n        <Typography variant=\"h6\" className=\"text-white\">\n          This app is a simple tool to help you track your progress on some of\n          the given topics. You can use it as a review tool to test your\n          understanding. The app uses a very simple json schema, if you are\n          interested you can even add new topics.\n        </Typography>\n        <div className=\"mb-2\"></div>\n        <Button\n          size=\"large\"\n          color=\"secondary\"\n          variant=\"contained\"\n          href=\"https://github.com/mk-hash/nxt2learn-react-app\"\n        >\n          View on GitHub\n        </Button>\n      </Box>\n      <Box className=\"box\">\n        <Typography variant=\"h3\" color=\"primary\">\n          Pick a topic to get started\n        </Typography>\n\n        <div className=\"mb-4\"></div>\n        <Concepts></Concepts>\n      </Box>\n      <Box bgcolor={orange[200]} className=\"box\">\n        <Typography variant=\"h3\">How it works?</Typography>\n        <div className=\"mb-2\"></div>\n        <Grid container justify=\"space-evenly\" alignItems=\"flex-start\">\n          <Grid item xs={12} md={4}>\n            <Card style={{ textAlign: \"center\", margin: \"2%\" }}>\n              <CardContent>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Avatar\n                    variant=\"circle\"\n                    style={{ fontSize: \"2em\", backgroundColor: lightBlue[500] }}\n                  >\n                    1\n                  </Avatar>\n                </Grid>\n                <br />\n                <Typography variant=\"h6\">\n                  Begin by clicking on a topic from the list above. This will\n                  take you to the topic's page where you have a number of\n                  sections.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Card style={{ textAlign: \"center\", margin: \"2%\" }}>\n              <CardContent>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Avatar\n                    variant=\"circle\"\n                    style={{ fontSize: \"2em\", backgroundColor: lightBlue[500] }}\n                  >\n                    2\n                  </Avatar>\n                </Grid>\n                <br />\n                <Typography variant=\"h6\">\n                  Each section has a number of sub-topics. Use the icons to mark\n                  sub-topics as todo(to read/review), or done(completed).\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={4}>\n            <Card style={{ textAlign: \"center\", margin: \"2%\" }}>\n              <CardContent>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Avatar\n                    variant=\"circle\"\n                    style={{ fontSize: \"2em\", backgroundColor: lightBlue[500] }}\n                  >\n                    3\n                  </Avatar>\n                </Grid>\n                <br />\n                <Typography variant=\"h6\">\n                  Once you are done reviewing topics click on View Report to go\n                  to the report page where you can view your choices at a\n                  glance.\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Chip from \"@material-ui/core/Chip\";\n\nexport default function SubTopics(props) {\n  function updateTopics(topic_id, status) {\n    //console.log(\"Topic #\" + topic_id + \"\\tStatus: \" + status);\n    props.onStatusUpdate(topic_id, status);\n  }\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} sm={10}>\n        {props.topics\n          .filter(tt => tt.parent_id === props.topTopic.id)\n          .map(topic => (\n            <Paper key={topic.id} style={{ marginBottom: \"5%\" }}>\n              <Grid container alignItems=\"center\">\n                <Grid item xs={4}>\n                  {topic.status !== \"todo\" && (\n                    <Tooltip title=\"Mark as todo\">\n                      <IconButton\n                        aria-label=\"todo\"\n                        color=\"secondary\"\n                        onClick={() => updateTopics(topic.id, \"todo\")}\n                      >\n                        <AddIcon />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n\n                  {topic.status !== \"done\" && (\n                    <Tooltip title=\"Completed\">\n                      <IconButton\n                        aria-label=\"done\"\n                        color=\"primary\"\n                        onClick={() => updateTopics(topic.id, \"done\")}\n                      >\n                        <CheckIcon />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n\n                  {!!topic.status && (\n                    <Tooltip title=\"Reset Choice\">\n                      <IconButton\n                        aria-label=\"reset choice\"\n                        onClick={() => updateTopics(topic.id, \"na\")}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  )}\n                </Grid>\n\n                <Grid item xs={6}>\n                  <Typography variant=\"body1\">{topic.title}</Typography>\n                </Grid>\n\n                <Grid item xs={2}>\n                  {!!topic.status && (\n                    <Chip\n                      size=\"small\"\n                      color={topic.status === \"done\" ? \"primary\" : \"secondary\"}\n                      label={topic.status.toUpperCase()}\n                    ></Chip>\n                  )}\n                </Grid>\n              </Grid>\n            </Paper>\n          ))}\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport SubTopics from \"./SubTopics\";\n\nimport CONCEPTS from \"../data/concepts.json\";\n\nconst nextLink = React.forwardRef((props, ref) => (\n  <Link innerRef={ref} {...props} />\n));\n\nexport default function Topics(props) {\n  const { id } = useParams();\n\n  const [concept, setConcept] = useState({});\n  const [topTopics, setTopTopics] = useState([]);\n  const [topics, setTopics] = useState([]);\n  const [topicNow, setTN] = useState(0);\n\n  useEffect(() => {\n    const tconcept = CONCEPTS.filter(c => c.id === +id);\n    if (!tconcept.length) {\n      setConcept({});\n    } else {\n      setConcept(tconcept[0]);\n      setTopTopics(tconcept[0].sections || []);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (!!topTopics.length && !topics.length) {\n      let localTopics = JSON.parse(localStorage.getItem(\"topic-\" + id));\n\n      if (!localTopics) {\n        setTopics(concept.topics);\n      } else {\n        setTopics(localTopics.topics);\n      }\n    }\n  }, [concept, topTopics, topics, id]);\n\n  function gotoTopic(pos) {\n    if (pos < 0 || pos >= topTopics.length) {\n      //console.log(\"Can't go there ...\");\n      return;\n    } else {\n      //console.log(\"POS: \" + pos);\n      setTN(pos);\n    }\n  }\n\n  function onStatusUpdate(topicsId, status) {\n    const ttopics = topics.map(t => {\n      if (t.id === topicsId) {\n        if (status === \"na\") {\n          delete t[\"status\"];\n          return Object.assign({}, t);\n        } else {\n          return Object.assign({}, t, { status });\n        }\n      }\n      return t;\n    });\n    localStorage.setItem(\"topic-\" + id, JSON.stringify({ topics: ttopics }));\n    setTopics(ttopics);\n  }\n\n  function startOver() {\n    //@TODO: show notification about clearing\n    localStorage.removeItem(\"topic-\" + id);\n    setTopics(concept.topics);\n  }\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12} sm={10} md={8} lg={6}>\n        <br />\n\n        {concept.id === undefined && (\n          <Card>\n            <CardHeader\n              action={[\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  key={1}\n                  to={\"/\"}\n                  component={nextLink}\n                >\n                  Back to Home\n                </Button>\n              ]}\n              title={\"No Such Topic Here\"}\n            />\n            <CardContent>\n              <Box\n                bgcolor=\"error.main\"\n                style={{ padding: \"2%\", color: \"white\", marginBottom: \"2%\" }}\n              >\n                <p>Sorry! Couldn't find the topic you were looking for.</p>\n                <p>\n                  In the mean time you can try other topics from the home page.\n                </p>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n        {concept.id !== undefined && !topTopics.length && (\n          <Card>\n            <CardHeader\n              action={[\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  key={1}\n                  to={\"/\"}\n                  component={nextLink}\n                >\n                  Back to Home\n                </Button>\n              ]}\n              title={concept.title}\n            />\n            <CardContent>\n              <Box\n                bgcolor=\"primary.main\"\n                style={{ padding: \"2%\", color: \"white\", marginBottom: \"2%\" }}\n              >\n                <p>\n                  Sorry! No data is available for this topic at the moment.\n                  Please check back later.\n                </p>\n                <p>\n                  In the mean time you can try other topics from the home page.\n                </p>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n\n        {concept.id !== undefined && !!topTopics.length && (\n          <Card>\n            <CardHeader\n              action={[\n                <Tooltip title=\"Erase existing status and start fresh\" key={1}>\n                  <Button\n                    size=\"small\"\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={startOver}\n                  >\n                    Start Over\n                  </Button>\n                </Tooltip>\n              ]}\n              title={concept.title}\n              subheader=\"Check your understanding\"\n            />\n            <CardContent>\n              <Stepper alternativeLabel activeStep={topicNow}>\n                {topTopics.map(t => (\n                  <Step key={t.id}>\n                    <StepLabel>{t.title}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n\n              <br />\n\n              {!!topTopics.length && (\n                <SubTopics\n                  topTopic={topTopics[topicNow]}\n                  topics={topics}\n                  onStatusUpdate={onStatusUpdate}\n                ></SubTopics>\n              )}\n\n              <br />\n              <Grid container justify=\"center\">\n                <Grid container item justify=\"space-around\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => gotoTopic(topicNow - 1)}\n                    disabled={topicNow === 0}\n                  >\n                    Back\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    to={\"/c/\" + id + \"/report\"}\n                    component={nextLink}\n                  >\n                    View Report\n                  </Button>\n\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => gotoTopic(topicNow + 1)}\n                    disabled={\n                      !topTopics.length || topicNow === topTopics.length - 1\n                    }\n                  >\n                    Next\n                  </Button>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport AddIcon from \"@material-ui/icons/AddCircle\";\nimport CheckIcon from \"@material-ui/icons/CheckCircle\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport CONCEPTS from \"../data/concepts.json\";\n\nconst nextLink = React.forwardRef((props, ref) => (\n  <Link innerRef={ref} {...props} />\n));\nexport default function Report(props) {\n  const { id } = useParams();\n  let concept = CONCEPTS.filter(c => c.id === +id);\n  if (!concept.length) {\n    concept = {};\n  } else {\n    concept = concept[0];\n  }\n  const localTopics = JSON.parse(localStorage.getItem(\"topic-\" + id));\n\n  const [topTopics] = useState(concept.sections || []);\n  const [topics] = useState(!localTopics ? [] : localTopics.topics);\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid item xs={12} md={10}>\n        <br />\n\n        {concept.id === undefined && (\n          <Card>\n            <CardHeader\n              action={[\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  key={1}\n                  to={\"/\"}\n                  component={nextLink}\n                >\n                  Back to Home\n                </Button>\n              ]}\n              title={\"No Such Topic Here\"}\n            />\n            <CardContent>\n              <Box\n                bgcolor=\"error.main\"\n                style={{ padding: \"2%\", color: \"white\", marginBottom: \"2%\" }}\n              >\n                <p>Sorry! Couldn't find the topic you were looking for.</p>\n                <p>\n                  In the mean time you can try other topics from the home page.\n                </p>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n\n        {concept.id !== undefined && !topTopics.length && (\n          <Card>\n            <CardHeader\n              action={[\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  key={1}\n                  to={\"/\"}\n                  component={nextLink}\n                >\n                  Back to Home\n                </Button>\n              ]}\n              title={concept.title}\n            />\n            <CardContent>\n              <Box\n                bgcolor=\"primary.main\"\n                style={{ padding: \"2%\", color: \"white\", marginBottom: \"2%\" }}\n              >\n                <p>\n                  Sorry! No data is available for this topic at the moment.\n                  Please check back later.\n                </p>\n                <p>\n                  In the mean time you can try other topics from the home page.\n                </p>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n\n        {!!topTopics.length && !topics.length && (\n          <Card>\n            <CardHeader\n              action={[\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  key={1}\n                  to={\"/c/\" + id}\n                  component={nextLink}\n                >\n                  Back to Topic\n                </Button>\n              ]}\n              title={concept.title}\n            />\n            <CardContent>\n              <br />\n              <Box\n                bgcolor=\"primary.main\"\n                style={{ padding: \"2%\", color: \"white\", marginBottom: \"2%\" }}\n              >\n                <p>\n                  Sorry! Not enough data is available for a report on this topic\n                  at the moment.\n                </p>\n                <p>\n                  Please visit the topic page and make some selections, and then\n                  you can view the report.\n                </p>\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n        {/* TODO */}\n        {!!topTopics.length && !!topics.length && (\n          <Card>\n            <CardHeader\n              action={[\n                <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  key={1}\n                  to={\"/c/\" + id}\n                  component={nextLink}\n                >\n                  Back to Topic\n                </Button>\n              ]}\n              title={concept.title}\n            />\n            <CardContent>\n              <br />\n              <Grid container>\n                {topTopics.map(tt => (\n                  <Grid item xs={12} sm={6} lg={4} key={tt.id}>\n                    <Card style={{ margin: \"1%\" }}>\n                      <CardHeader title={tt.title} />\n                      <CardContent>\n                        {topics\n                          .filter(t => t.parent_id === tt.id)\n                          .map(topic => (\n                            <Grid\n                              container\n                              alignItems=\"center\"\n                              key={topic.id}\n                              className={\"mb-2\"}\n                            >\n                              <Grid item xs={2}>\n                                {topic.status === \"todo\" && (\n                                  <Tooltip title=\"ToDo\">\n                                    <AddIcon color=\"secondary\"></AddIcon>\n                                  </Tooltip>\n                                )}\n                                {topic.status === \"done\" && (\n                                  <Tooltip title=\"Done\">\n                                    <CheckIcon color=\"primary\"></CheckIcon>\n                                  </Tooltip>\n                                )}\n                                {!topic.status && (\n                                  <Tooltip title=\"No Response\">\n                                    <HelpIcon color=\"action\"></HelpIcon>\n                                  </Tooltip>\n                                )}\n                              </Grid>\n                              <Grid item xs={10}>\n                                <Typography\n                                  variant=\"body1\"\n                                  color={\n                                    topic.status === \"done\"\n                                      ? \"primary\"\n                                      : topic.status === \"todo\"\n                                      ? \"secondary\"\n                                      : \"textSecondary\"\n                                  }\n                                  style={{\n                                    fontStyle: !topic.status\n                                      ? \"italic\"\n                                      : \"normal\",\n                                    fontWeight:\n                                      topic.status === \"todo\"\n                                        ? \"bold\"\n                                        : \"normal\"\n                                  }}\n                                >\n                                  {topic.title}\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          ))}\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            </CardContent>\n          </Card>\n        )}\n      </Grid>\n    </Grid>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: lightBlue,\n    secondary: orange\n  }\n});\nexport default theme;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Home from \"./components/Home\";\nimport Topics from \"./components/Topics\";\nimport Report from \"./components/Report\";\n\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport theme from \"./theme\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <Link to=\"/\" className=\"Link\">\n              <Typography variant=\"h6\" color=\"inherit\">\n                nxt2learn\n              </Typography>\n            </Link>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route path=\"/c/:id/report\">\n            <Report></Report>\n          </Route>\n\n          <Route path=\"/c/:id\">\n            <Topics></Topics>\n          </Route>\n\n          <Route exact path=\"/\">\n            <Home></Home>\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}